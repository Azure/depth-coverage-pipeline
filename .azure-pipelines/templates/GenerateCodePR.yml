steps:
- bash: |
    echo "https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com" > ~/.git-credentials
    git clone --branch $(OnboardType)-$(TARGET)-$(ResourceProvider) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com/$(Swagger_ORG)/azure-rest-api-specs.git
    sdktarget=$(TARGET)
    repo=""
    if [ "$sdktarget" == "terraform" ]; then
      git clone --branch $(OnboardType)-$(TARGET)-$(ResourceProvider) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com/$(TF_ORG)/terraform-provider-azurerm.git
      repo="terraform-provider-azurerm"
      # cp $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.terraform.md $(Pipeline.Workspace)/s/terraform-provider-azurerm/azurerm/internal/services/$(ResourceProvider)/
      cp $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.terraform.md $(Pipeline.Workspace)/s/terraform-provider-azurerm/
    fi

    if [ "$sdktarget" == "clicore" ]; then
      git clone --branch $(OnboardType)-$(TARGET)-$(ResourceProvider) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com/$(CLI_ORG)/azure-cli
      repo="azure-cli"
      cp $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.az.md $(Pipeline.Workspace)/s/azure-cli/
    fi

    if [ "$sdktarget" == "cliextension" ]; then
      git clone --branch $(OnboardType)-$(TARGET)-$(ResourceProvider) https://$(PIPELINE_USER):$(PIPELINE_TOKEN)@github.com/$(CLI_ORG)/azure-cli-extensions
      repo="azure-cli-extensions"
      cp $(Pipeline.Workspace)/s/azure-rest-api-specs/specification/$(ResourceProvider)/resource-manager/readme.az.md $(Pipeline.Workspace)/s/azure-cli-extensions/
    fi

    cd $(Pipeline.Workspace)/s/$repo
    tf_existed_in_remote=$(git ls-remote --heads origin $(OnboardType)-code-$(TARGET)-$(ResourceProvider))
      if [[ -z ${tf_existed_in_remote} ]]; then
        git checkout -b $(OnboardType)-code-$(TARGET)-$(ResourceProvider)
      else
        git checkout $(OnboardType)-code-$(TARGET)-$(ResourceProvider)
        git reset --hard origin/$(OnboardType)-$(TARGET)-$(ResourceProvider)
    fi
    
    git config credential.helper store; git config --global user.email "chunyu@microsoft.com";git config --global user.name "chunyu3;"
    git branch; git add -A; git commit -m "autogenerated"; git push -f origin $(OnboardType)-code-$(TARGET)-$(ResourceProvider);
    
    org=""
    repo=""
    base="master"
    sdk="";
    if [ "$sdktarget" == "terraform" ]; then
      org=$(TF_ORG)
      repo="terraform-provider-azurerm"
      sdk="terraform"
      base="pipeline"
    fi

    if [ "$sdktarget" == "clicore" ]; then
      org=$(CLI_ORG)
      repo="azure-cli"
      base="dev"
      sdk="clicore"
    fi

    if [ "$sdktarget" == "cliextension" ]; then
      org=$(CLI_ORG)
      repo="azure-cli-extensions"
      base="master"
      sdk="cliextension"
    fi
    
    codePR=$(curl -X POST -H "Content-Type: application/json" http://$(CodegenApp_Server)/DepthCoverage/generateCodePR -d '{"token":"$(PIPELINE_TOKEN)", "org":"'"$org"'", "repo":"'"$repo"'", "title":"{$(OnboardType) coverage, not merge} pull request of $(ResourceProvider)", "branch":"$(OnboardType)-code-$(TARGET)-$(ResourceProvider)", "base":"'"$base"'"}')
    echo "codePR:$codePR"
    echo "##vso[task.setvariable variable=CODE_PULLREQUEST]$codePR"
  displayName: "Generate Code Pull Request"